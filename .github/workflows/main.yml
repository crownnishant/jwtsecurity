name: CI/CD for Spring Boot with Docker

on:
  push:
    branches:
      - master

jobs:
  build-deploy:
    name: Build and Package SpringBootJWT
    runs-on: ubuntu-latest  # Changed from Windows to Ubuntu to support MySQL service

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: security_jwt
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=127.0.0.1 --user=root --password=root"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: maven

      - name: Configure Database Connection
        run: |
          sed -i 's|localhost|127.0.0.1|g' src/main/resources/application.properties
          cat src/main/resources/application.properties

      - name: Build with Maven
        run: mvn clean package -DskipTests=false

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar

  docker:
    name: Build & Push Docker Image
    needs: build-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app
          path: target

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/jwtsecurity:latest
